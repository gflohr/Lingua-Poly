#! /bin/false
#
# Lingua-Poly   Language Disassembling Library
# Copyright (C) 2018-2019 Guido Flohr <guido.flohr@cantanea.com>
#               All rights reserved
#
# This library is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What the Fuck You Want
# to Public License, Version 2, as published by Sam Hocevar. See
# http://www.wtfpl.net/ for more details.

package Lingua::Poly::RestAPI::Controller;

use strict;

use HTTP::Status qw(:constants);
use Mojo::Base ('Mojolicious::Controller', 'Lingua::Poly::RestAPI::Logger');

# It would be better to use RFC7807 error responses but that may conflict
# with the response bodies generated by the OpenAPI plug-in.
sub errorResponse {
	my ($self, $code, @raw_errors) = @_;

    $code ||= HTTP_BAD_REQUEST;
	my @errors;
	foreach my $error (@raw_errors) {
		$error = { message => $error } if !ref $error;
		$error->{path} //= '';
		push @errors, $error;
	}

	return $self->render(openapi => { errors => \@errors }, status => $code);
}

sub footprint {
	my ($self) = @_;

	my $req = $self->req;

	my $ua = $req->header('User-Agent');
    $ua //= '';

    my $ip = $req->address;

    return join ':', $ip, $ua;

}
1;
